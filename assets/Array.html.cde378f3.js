import{e as n}from"./app.2ab217e5.js";import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";const s={},p=n(`<h2 id="description\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#description\u63CF\u8FF0" aria-hidden="true">#</a> Description\u63CF\u8FF0</h2><p>\u7565\u3002</p><h2 id="constructor\u6784\u9020\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#constructor\u6784\u9020\u51FD\u6570" aria-hidden="true">#</a> Constructor\u6784\u9020\u51FD\u6570</h2><h3 id="array" tabindex="-1"><a class="header-anchor" href="#array" aria-hidden="true">#</a> Array()</h3><h2 id="static-properties\u9759\u6001\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#static-properties\u9759\u6001\u5C5E\u6027" aria-hidden="true">#</a> Static properties\u9759\u6001\u5C5E\u6027</h2><h3 id="array-from" tabindex="-1"><a class="header-anchor" href="#array-from" aria-hidden="true">#</a> Array.from()</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arrayLike<span class="token punctuation">[</span><span class="token punctuation">,</span>mapFn<span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>Arg<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="array-isarray" tabindex="-1"><a class="header-anchor" href="#array-isarray" aria-hidden="true">#</a> Array.isArray()</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>
Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>\u5728\u68C0\u67E5 Array \u5B9E\u4F8B\u65F6\uFF0C\u4F7F\u7528 Array.isArray \u4F18\u5148\u4E8E instanceof\uFF0C\u56E0\u4E3A\u5B83\u53EF\u4EE5\u901A\u8FC7 iframe \u5DE5\u4F5C\u3002</p></blockquote><h3 id="array-of" tabindex="-1"><a class="header-anchor" href="#array-of" aria-hidden="true">#</a> Array.of()</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Array<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [7]</span>
<span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// array of 7 empty slots</span>

Array<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 3]</span>
<span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// [1, 2, 3]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="instance-properties-\u5B9E\u4F8B\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#instance-properties-\u5B9E\u4F8B\u5C5E\u6027" aria-hidden="true">#</a> Instance properties \u5B9E\u4F8B\u5C5E\u6027</h2><h3 id="array-prototype-length" tabindex="-1"><a class="header-anchor" href="#array-prototype-length" aria-hidden="true">#</a> Array.prototype.length</h3><p>Length \u5C5E\u6027\u7684\u503C\u662F\u4E00\u4E2A\u5E26\u6B63\u53F7\u7684\u6574\u6570\uFF0C\u5176\u503C\u5C0F\u4E8E2\u768432\u6B21\u65B9(2 ^ 32)\u3002</p><h2 id="instance-methods-\u5B9E\u4F8B\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#instance-methods-\u5B9E\u4F8B\u65B9\u6CD5" aria-hidden="true">#</a> Instance methods \u5B9E\u4F8B\u65B9\u6CD5</h2><h3 id="array-prototype-at" tabindex="-1"><a class="header-anchor" href="#array-prototype-at" aria-hidden="true">#</a> Array.prototype.at()</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
array1<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">//130</span>
array1<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token comment">//undefind</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="array-prototype-concat" tabindex="-1"><a class="header-anchor" href="#array-prototype-concat" aria-hidden="true">#</a> Array.prototype.concat()</h3><p>\u5408\u5E76\u591A\u4E2A\u6570\u7EC4\u3002\u4E0D\u6539\u53D8\u539F\u6570\u7EC4\uFF0C\u8FD4\u56DE\u65B0\u6570\u7EC4\u3002</p><p>\u5F15\u7528\u4FDD\u7559\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> num1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> num2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> numbers <span class="token operator">=</span> num1<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// results in [[1], 2, [3]]</span>

<span class="token comment">// modify the first element of num1</span>
num1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// results in [[1, 4], 2, [3]]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="array-prototype-copywithin" tabindex="-1"><a class="header-anchor" href="#array-prototype-copywithin" aria-hidden="true">#</a> Array.prototype.copyWithin()</h3><p>\u6D45\u590D\u5236\u6570\u7EC4\u7684\u4E00\u90E8\u5206\u5230\u540C\u4E00\u4E2A\u6570\u7EC4\u4E2D\u7684\u53E6\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u5E76\u8FD4\u56DE\u5B83\uFF0C\u4E0D\u4F1A\u6539\u53D8\u539F\u6570\u7EC4\u7684\u957F\u5EA6\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>array<span class="token punctuation">.</span><span class="token function">copyWithin</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span><span class="token punctuation">(</span>start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>end <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="array-prototype-entries" tabindex="-1"><a class="header-anchor" href="#array-prototype-entries" aria-hidden="true">#</a> Array.prototype.entries()</h3><p>\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 Array Iterator \u5BF9\u8C61\uFF0C\u8BE5\u5BF9\u8C61\u5305\u542B\u6570\u7EC4\u4E2D\u6BCF\u4E2A\u7D22\u5F15\u7684\u952E/\u503C\u5BF9\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>index<span class="token punctuation">,</span> element<span class="token punctuation">]</span> <span class="token keyword">of</span> a<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> element<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 0 &#39;a&#39;</span>
<span class="token comment">// 1 &#39;b&#39;</span>
<span class="token comment">// 2 &#39;c&#39;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="array-prototype-every" tabindex="-1"><a class="header-anchor" href="#array-prototype-every" aria-hidden="true">#</a> Array.prototype.every()</h3><p>\u6D4B\u8BD5\u6570\u7EC4\u4E2D\u7684\u6240\u6709\u5143\u7D20\u662F\u5426\u901A\u8FC7\u7531\u63D0\u4F9B\u7684\u51FD\u6570\u5B9E\u73B0\u7684\u6D4B\u8BD5\u3002\u5B83\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>array<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">currentValue<span class="token punctuation">,</span>index<span class="token punctuation">,</span>arr</span><span class="token punctuation">)</span><span class="token punctuation">,</span>thisArg<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>\u6CE8\u610F: \u5BF9\u7A7A\u6570\u7EC4\u8C03\u7528\u6B64\u65B9\u6CD5\u5BF9\u4E8E\u4EFB\u4F55\u60C5\u51B5\u90FD\u5C06\u8FD4\u56DE true\uFF01</p><p>\u52A8\u6001\u6539\u53D8\u5143\u7D20\u4F1A\u5F71\u54CDcallbackFn\u8C03\u7528</p></blockquote><h3 id="array-prototype-fill" tabindex="-1"><a class="header-anchor" href="#array-prototype-fill" aria-hidden="true">#</a> Array.prototype.fill()</h3><p>\u7528\u4E00\u4E2A\u9759\u6001\u503C\u586B\u5145\u6570\u7EC4\u4ECE\u5F00\u59CB\u7D22\u5F15\u5230\u7EC8\u6B62\u7D22\u5F15\u5185\u6240\u6709\u5143\u7D20\uFF0C\u4E0D\u5305\u62EC\u7EC8\u6B62\u7D22\u5F15\u3002</p><p>\u8FD4\u56DE\u4FEE\u6539\u540E\u6570\u7EC4\u3002</p><p>mutator\u65B9\u6CD5\uFF1A\u4FEE\u6539\u539F\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span><span class="token punctuation">(</span>start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>end <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>\u5982\u679C\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A\u69FD\u5C06\u5F15\u7528\u8BE5\u5BF9\u8C61\u3002</p></blockquote><h3 id="array-prototype-filter" tabindex="-1"><a class="header-anchor" href="#array-prototype-filter" aria-hidden="true">#</a> Array.prototype.filter()</h3><p>\u8FD4\u56DE\u4E00\u4E2A\u65B0\u6570\u7EC4\uFF0C\u5176\u5305\u542B\u901A\u8FC7\u6240\u63D0\u4F9B\u51FD\u6570\u5B9E\u73B0\u7684\u6D4B\u8BD5\u7684\u6240\u6709\u5143\u7D20.</p><p>\u4E0D\u4F1A\u6539\u53D8\u8C03\u7528\u5B83\u7684\u6570\u7EC4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> newArray <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">currentValue<span class="token punctuation">,</span> index<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span><span class="token punctuation">,</span> thisArg<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>\u52A8\u6001\u6539\u53D8\u5143\u7D20\u4F1A\u5F71\u54CDcallbackFn\u8C03\u7528</p></blockquote><h3 id="array-prototype-find" tabindex="-1"><a class="header-anchor" href="#array-prototype-find" aria-hidden="true">#</a> Array.prototype.find()</h3><p>\u8FD4\u56DE\u63D0\u4F9B\u7684\u6570\u7EC4\u4E2D\u6EE1\u8DB3\u63D0\u4F9B\u7684\u6D4B\u8BD5\u51FD\u6570\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u3002\u5982\u679C\u6CA1\u6709\u503C\u6EE1\u8DB3\u6D4B\u8BD5\u51FD\u6570\uFF0C\u5219\u8FD4\u56DE undefined\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> ele <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> index<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span><span class="token punctuation">,</span> thisArg<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>\u52A8\u6001\u6539\u53D8\u5143\u7D20\u4F1A\u5F71\u54CDcallbackFn\u8C03\u7528</p></blockquote><h3 id="array-prototype-findindex" tabindex="-1"><a class="header-anchor" href="#array-prototype-findindex" aria-hidden="true">#</a> Array.prototype.findIndex()</h3><p>\u8FD4\u56DE\u6570\u7EC4\u4E2D\u6EE1\u8DB3\u63D0\u4F9B\u7684\u6D4B\u8BD5\u51FD\u6570\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u7684\u7D22\u5F15\u3002\u5426\u5219\uFF0C\u5B83\u8FD4\u56DE -1\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> eleIndex <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> index<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span><span class="token punctuation">,</span> thisArg<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>\u52A8\u6001\u6539\u53D8\u5143\u7D20\u4F1A\u5F71\u54CDcallbackFn\u8C03\u7528</p></blockquote><h3 id="array-prototype-flat" tabindex="-1"><a class="header-anchor" href="#array-prototype-flat" aria-hidden="true">#</a> Array.prototype.flat()</h3><p>\u8FD4\u56DE\u4E00\u4E2A\u5305\u542B\u6240\u6709\u5B50\u6570\u7EC4\u5143\u7D20\u7684\u65B0\u6570\u7EC4\uFF0C\u9012\u5F52\u5730\u8FDE\u63A5\u5230\u8BE5\u6570\u7EC4\u4E2D\uFF0C\u76F4\u5230\u6307\u5B9A\u7684\u6DF1\u5EA6\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token punctuation">(</span>depth <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol><li><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span> <span class="token comment">//\u591A\u5C42\u5D4C\u5957\u8F6C\u4E00\u7EF4</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>flat\u53EF\u4EE5\u5220\u9664\u6570\u7EC4\u4E2D\u7A7A\u69FD\u3002</p></li></ol><p>Alternatives\u66FF\u4EE3\u54C1:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

arr<span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> acc<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [1, 2, 3, 4]</span>

<span class="token keyword">const</span> <span class="token function-variable function">flattened</span> <span class="token operator">=</span> <span class="token parameter">arr</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ======</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">flatDeep</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> d <span class="token operator">=</span> <span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> d <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> acc<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">flatDeep</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> d <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">:</span> val<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
                <span class="token operator">:</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">flatDeep</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">Infinity</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [1, 2, 3, 4, 5, 6]</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="array-prototype-flatmap" tabindex="-1"><a class="header-anchor" href="#array-prototype-flatmap" aria-hidden="true">#</a> Array.prototype.flatMap()</h3><p>\u5C06\u7ED9\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\u5E94\u7528\u4E8E\u8C03\u7528\u6570\u7EC4\u7684\u6BCF\u4E2A\u5143\u7D20\uFF0C\u7136\u540E\u5C06\u7ED3\u679C\u5E73\u5766\u5316\u4E00\u4E2A\u7EA7\u522B\uFF0C\u4ECE\u800C\u8FD4\u56DE\u4E00\u4E2A\u65B0\u6570\u7EC4\u3002</p><blockquote><p>\u6620\u5C04\u671F\u95F4\u6DFB\u52A0\u5220\u9664\u4E0D\u4F1A\u5F71\u54CD</p></blockquote><h3 id="array-prototype-foreach" tabindex="-1"><a class="header-anchor" href="#array-prototype-foreach" aria-hidden="true">#</a> Array.prototype.forEach()</h3><p>\u8FD4\u56DE\u503C undefined</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>array<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span>index<span class="token punctuation">,</span>arr</span><span class="token punctuation">)</span><span class="token punctuation">,</span>thisArg<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>\u52A8\u6001\u6539\u53D8\u5143\u7D20\u4F1A\u5F71\u54CDcallbackFn\u8C03\u7528</p><p>\u7A7A\u503C\u4F1A\u88AB\u8DF3\u8FC7</p></blockquote><h3 id="array-prptprype-includes" tabindex="-1"><a class="header-anchor" href="#array-prptprype-includes" aria-hidden="true">#</a> Array.prptprype.includes()</h3><p>\u786E\u5B9A\u6570\u7EC4\u5728\u5176\u6761\u76EE\u4E2D\u662F\u5426\u5305\u542B\u67D0\u4E2A\u503C\uFF0C\u5E76\u914C\u60C5\u8FD4\u56DE true \u6216 false\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>searchElement<span class="token punctuation">,</span>fromIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u533A\u5206\u7C7B\u578B\uFF0C\u4F46\u662F\u96F6\u7684\u503C\u90FD\u88AB\u8BA4\u4E3A\u662F\u76F8\u7B49\u7684\u3002</p><p>\u6BD4\u8F83\u5B57\u7B26\u4E32\u548C\u5B57\u7B26\u65F6\uFF0Cincludes ()\u533A\u5206\u5927\u5C0F\u5199\u3002</p><p>\u5982\u679CfromIndex \u5927\u4E8E\u6216\u7B49\u4E8E\u6570\u7EC4\u7684\u957F\u5EA6\uFF0C\u8FD4\u56DEfalse\u3002\u4E0D\u4F1A\u641C\u7D22\u8BE5\u6570\u7EC4\u3002</p><h3 id="array-prototype-indexof" tabindex="-1"><a class="header-anchor" href="#array-prototype-indexof" aria-hidden="true">#</a> Array.prototype.indexOf()</h3><p>\u8FD4\u56DE\u6570\u7EC4\u4E2D\u53EF\u4EE5\u627E\u5230\u7ED9\u5B9A\u5143\u7D20\u7684\u7B2C\u4E00\u4E2A\u7D22\u5F15\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\uFF0C\u5219\u8FD4\u56DE -1\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>array<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>serchElement<span class="token punctuation">,</span> fromIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>indexOf()\u4E0D\u80FD\u8BC6\u522B<code>NaN</code></p><h3 id="array-prototype-lastindexof" tabindex="-1"><a class="header-anchor" href="#array-prototype-lastindexof" aria-hidden="true">#</a> Array.prototype.lastIndexOf()</h3><p>\u65B9\u6CD5\u8FD4\u56DE\u7ED9\u5B9A\u5143\u7D20\u53EF\u4EE5\u5728\u6570\u7EC4\u4E2D\u627E\u5230\u7684\u6700\u540E\u4E00\u4E2A\u7D22\u5F15\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\u5219\u8FD4\u56DE -1\u3002\u5411\u540E\u641C\u7D22\u6570\u7EC4\uFF0C\u4ECE fromIndex \u5F00\u59CB\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span>serchElement<span class="token punctuation">,</span> fromIndex <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="array-prototype-join" tabindex="-1"><a class="header-anchor" href="#array-prototype-join" aria-hidden="true">#</a> Array.prototype.join()</h3><p>\u901A\u8FC7\u8FDE\u63A5\u6570\u7EC4(\u6216\u7C7B\u4F3C\u6570\u7EC4\u7684\u5BF9\u8C61)\u4E2D\u7684\u6240\u6709\u5143\u7D20\uFF0C\u4EE5\u9017\u53F7\u6216\u6307\u5B9A\u7684\u5206\u9694\u7B26\u5B57\u7B26\u4E32\u5206\u9694\uFF0C\u521B\u5EFA\u5E76\u8FD4\u56DE\u4E00\u4E2A\u65B0\u5B57\u7B26\u4E32\u3002\u5982\u679C\u6570\u7EC4\u53EA\u6709\u4E00\u4E2A\u9879\uFF0C\u5219\u4E0D\u4F7F\u7528\u5206\u9694\u7B26\u8FD4\u56DE\u8BE5\u9879\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>separator <span class="token operator">=</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="array-prototype-keys" tabindex="-1"><a class="header-anchor" href="#array-prototype-keys" aria-hidden="true">#</a> Array.prototype.keys()</h3><p>\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 Array Iterator \u5BF9\u8C61\uFF0C\u8BE5\u5BF9\u8C61\u5305\u542B\u6570\u7EC4\u4E2D\u6BCF\u4E2A\u7D22\u5F15\u7684\u952E\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u952E\u8FED\u4EE3\u5668\u4E0D\u5FFD\u7565\u6F0F\u6D1E</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> sparseKeys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> denseKeys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sparseKeys<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;0&#39;, &#39;2&#39;]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>denseKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [0, 1, 2]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="array-prototype-map" tabindex="-1"><a class="header-anchor" href="#array-prototype-map" aria-hidden="true">#</a> Array.prototype.map()</h3><p>\u8FD4\u56DE\u4E00\u4E2A\u65B0\u6570\u7EC4\uFF0C\u5176\u4E2D\u586B\u5145\u4E86\u5BF9\u8C03\u7528\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\u8C03\u7528\u63D0\u4F9B\u7684\u51FD\u6570\u7684\u7ED3\u679C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> newArray <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">currentValue<span class="token punctuation">,</span> index<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span><span class="token punctuation">,</span> thisArg<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="array-prototype-pop" tabindex="-1"><a class="header-anchor" href="#array-prototype-pop" aria-hidden="true">#</a> Array.prototype.pop()</h3><p>\u4ECE\u6570\u7EC4\u4E2D\u5220\u9664\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u5E76\u8FD4\u56DE\u8BE5\u5143\u7D20\u3002\u6B64\u65B9\u6CD5\u66F4\u6539\u6570\u7EC4\u7684\u957F\u5EA6\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u5F53\u6570\u7EC4\u4E3A\u7A7A\u8FD4\u56DEundefined</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="array-prttotype-push" tabindex="-1"><a class="header-anchor" href="#array-prttotype-push" aria-hidden="true">#</a> Array.prttotype.push()</h3><p>\u5C06\u4E00\u4E2A\u6216\u591A\u4E2A\u5143\u7D20\u6DFB\u52A0\u5230\u6570\u7EC4\u672B\u5C3E\uFF0C\u5E76\u8FD4\u56DE\u6570\u7EC4\u7684\u65B0\u957F\u5EA6\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element1<span class="token punctuation">,</span><span class="token operator">...</span><span class="token punctuation">,</span>elementN<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="array-prototype-reduce" tabindex="-1"><a class="header-anchor" href="#array-prototype-reduce" aria-hidden="true">#</a> Array.prototype.reduce()</h3><p>\u5BF9\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E00\u4E2A\u5143\u7D20\u6267\u884C\u4E00\u4E2A\u7531\u4F60\u63D0\u4F9B\u7684<strong>reducer</strong>\u51FD\u6570\uFF08\u5347\u5E8F\u6267\u884C\uFF09\uFF0C\u5C06\u5176\u7ED3\u679C\u6C47\u603B\u4E3A\u5355\u4E2A\u8FD4\u56DE\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">previousValue<span class="token punctuation">,</span> currentValue<span class="token punctuation">,</span> currentIndex<span class="token punctuation">,</span> array</span><span class="token punctuation">)</span><span class="token punctuation">,</span> initialValue<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="array-prototype-reduceright" tabindex="-1"><a class="header-anchor" href="#array-prototype-reduceright" aria-hidden="true">#</a> Array.prototype.reduceRight()</h3><p>\u4ECE\u53F3\u5411\u5DE6\u7D2F\u52A0\uFF0C\u540C\u4E0A\u3002</p><h3 id="array-prototype-reverse" tabindex="-1"><a class="header-anchor" href="#array-prototype-reverse" aria-hidden="true">#</a> Array.prototype.reverse()</h3><p>\u5C31\u5730\u53CD\u8F6C\u6570\u7EC4\u3002\u5E76\u8FD4\u56DE\u8BE5\u6570\u7EC4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="array-prototype-shift" tabindex="-1"><a class="header-anchor" href="#array-prototype-shift" aria-hidden="true">#</a> Array.prototype.shift()</h3><p>\u4ECE\u6570\u7EC4\u4E2D\u5220\u9664<strong>\u7B2C\u4E00\u4E2A</strong>\u5143\u7D20\u5E76\u8FD4\u56DE\u88AB\u5220\u9664\u7684\u5143\u7D20\u3002\u6B64\u65B9\u6CD5\u66F4\u6539\u6570\u7EC4\u7684\u957F\u5EA6\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u5982\u679C\u6570\u7EC4\u4E3A\u7A7A\u8FD4\u56DEundefined</p><h3 id="array-prototype-slice" tabindex="-1"><a class="header-anchor" href="#array-prototype-slice" aria-hidden="true">#</a> Array.prototype.slice()</h3><p>\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u6570\u7EC4\uFF0C\u7531<code>begin</code>\u548C<code>end</code>\u51B3\u5B9A\u7684\u539F\u6570\u7EC4\u7684<strong>\u6D45\u62F7\u8D1D</strong>\uFF08\u5305\u62ECbegin\uFF0C\u4E0D\u5305\u62ECend\uFF09\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">[</span>begin <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">[</span><span class="token punctuation">,</span>end <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="array-prototype-some" tabindex="-1"><a class="header-anchor" href="#array-prototype-some" aria-hidden="true">#</a> Array.prototype.some()</h3><p>\u6D4B\u8BD5\u6570\u7EC4\u4E2D\u662F\u5426\u81F3\u5C11\u6709\u4E00\u4E2A\u5143\u7D20\u901A\u8FC7\u7531\u63D0\u4F9B\u7684\u51FD\u6570\u5B9E\u73B0\u7684\u6D4B\u8BD5\u3002\u8FD4\u56DE\u4E00\u4E2ABoolean\u7C7B\u578B\u7684\u503C\uFF0C\u4E0D\u4FEE\u6539\u6570\u7EC4\u3002\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>array<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">currentValue<span class="token punctuation">,</span> index <span class="token punctuation">,</span>arr</span><span class="token punctuation">)</span><span class="token punctuation">,</span>thisArg<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="array-prototype-sort" tabindex="-1"><a class="header-anchor" href="#array-prototype-sort" aria-hidden="true">#</a> Array.prototype.sort()</h3><p>\u5BF9\u6570\u7EC4\u7684\u5143\u7D20\u8FDB\u884C\u6392\u5E8F\u5E76\u8FD4\u56DE\u5DF2\u6392\u5E8F\u7684\u6570\u7EC4\u3002\u9ED8\u8BA4\u7684\u6392\u5E8F\u987A\u5E8F\u662F\u5347\u5E8F\uFF0C\u6784\u5EFA\u5728\u5C06\u5143\u7D20\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32\u4E4B\u540E\uFF0C\u7136\u540E\u6BD4\u8F83\u5B83\u4EEC\u7684 utf-16\u4EE3\u7801\u5355\u4F4D\u503C\u5E8F\u5217\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">[</span>compareFunction<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>\u81EA\u7B2C10\u7248(\u6216 EcmaScript 2019)\u4EE5\u6765\uFF0C\u89C4\u8303\u89C4\u5B9A arry.prototype.sort \u662F\u7A33\u5B9A\u7684\u3002</p></blockquote><h3 id="array-prototype-splice" tabindex="-1"><a class="header-anchor" href="#array-prototype-splice" aria-hidden="true">#</a> Array.prototype.splice()</h3><p>\u901A\u8FC7\u5220\u9664\u6216\u66FF\u6362\u73B0\u6709\u5143\u7D20\u548C/\u6216\u6DFB\u52A0\u65B0\u5143\u7D20\u6765\u66F4\u6539\u6570\u7EC4\u7684\u5185\u5BB9\u3002\u5E76\u4EE5\u6570\u7EC4\u7684\u5F62\u5F0F\u8FD4\u56DE\u88AB\u4FEE\u6539\u7684\u5185\u5BB9\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>array<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span>deleteCount<span class="token punctuation">,</span>item1<span class="token punctuation">,</span><span class="token operator">...</span><span class="token punctuation">,</span>itemX<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="array-prototype-tolocalestring" tabindex="-1"><a class="header-anchor" href="#array-prototype-tolocalestring" aria-hidden="true">#</a> Array.prototype.toLocaleString()</h3><p>\u8FD4\u56DE\u4E00\u4E2A\u8868\u793A\u6570\u7EC4\u5143\u7D20\u7684\u5B57\u7B26\u4E32\u3002\u5143\u7D20\u4F7F\u7528 toLocaleString \u65B9\u6CD5\u8F6C\u6362\u4E3A String\uFF0C\u8FD9\u4E9B String \u7531\u7279\u5B9A\u4E8E\u8BED\u8A00\u73AF\u5883\u7684 String (\u4F8B\u5982\u9017\u53F7\u201C ,\u201D)\u5206\u9694\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">[</span>locales<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">,</span> options<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Examples:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> prices <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;\uFFE57&#39;</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">8123</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
prices<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token string">&#39;ja-JP&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token string">&#39;currency&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">currency</span><span class="token operator">:</span> <span class="token string">&#39;JPY&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// &quot;\uFFE57,\uFFE5500,\uFFE58,123,\uFFE512&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="array-prototype-tostring" tabindex="-1"><a class="header-anchor" href="#array-prototype-tostring" aria-hidden="true">#</a> Array.prototype.toString()</h3><p>\u8FD4\u56DE\u8868\u793A\u6307\u5B9A\u6570\u7EC4\u53CA\u5176\u5143\u7D20\u7684\u5B57\u7B26\u4E32\u3002</p><div class="language-JS ext-JS line-numbers-mode"><pre class="language-JS"><code>arr.toString()
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="array-prototype-unshift" tabindex="-1"><a class="header-anchor" href="#array-prototype-unshift" aria-hidden="true">#</a> Array.prototype.unshift()</h3><p>\u5C06\u4E00\u4E2A\u6216\u591A\u4E2A\u5143\u7D20\u6DFB\u52A0\u5230\u6570\u7EC4\u7684\u5F00\u5934\uFF0C\u5E76\u8FD4\u56DE\u6570\u7EC4\u7684\u65B0\u957F\u5EA6\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>element1<span class="token punctuation">,</span><span class="token operator">...</span><span class="token punctuation">,</span>elementN<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="array-prototype-values" tabindex="-1"><a class="header-anchor" href="#array-prototype-values" aria-hidden="true">#</a> Array.prototype.values()</h3><p>\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u6570\u7EC4\u8FED\u4EE3\u5668\u5BF9\u8C61\uFF0C\u5176\u4E2D\u5305\u542B\u6570\u7EC4\u4E2D\u6BCF\u4E2A\u7D22\u5F15\u7684\u503C\u3002</p><blockquote><p>\u6570\u7EC4\u8FED\u4EE3\u5668\u5BF9\u8C61\u662F\u4E00\u4E2A\u4F7F\u7528\u6216\u4E34\u65F6\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;e&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> iterator <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> letter <span class="token keyword">of</span> iterator<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>letter<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token comment">//&quot;a&quot; &quot;b&quot; &quot;c&quot; &quot;d&quot; &quot;e&quot;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> letter <span class="token keyword">of</span> iterator<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>letter<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token comment">// undefined</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></blockquote><blockquote><p>\u5982\u679C\u6570\u7EC4\u4E2D\u7684\u503C\u6539\u53D8\u4E86\uFF0C\u90A3\u4E48\u6570\u7EC4\u8FED\u4EE3\u5668\u5BF9\u8C61\u503C\u4E5F\u4F1A\u6539\u53D8\u3002</p></blockquote>`,132);function t(e,o){return p}var u=a(s,[["render",t]]);export{u as default};
